<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.fasterxml.jackson</groupId>
    <artifactId>jackson-parent</artifactId>
    <version>2.4.1</version>
  </parent>
  <groupId>com.fasterxml.jackson.datatype</groupId>
  <artifactId>jackson-datatype-threetenbp</artifactId>
  <version>2.4.1-SNAPSHOT</version>
  <name>Jackson-Datatype-ThreeTenBackport</name>
  <packaging>bundle</packaging>
  <description>Add-on module to support JSR-310 (Java 8 Date &amp; Time API) data types with Java 7 (using the ThreeTen backport).</description>
  <url>http://wiki.fasterxml.com/JacksonModuleJSR310</url>
  <scm>
    <connection>scm:git:git@github.com:joschi/jackson-datatype-threetenbp.git</connection>
    <developerConnection>scm:git:git@github.com:joschi/jackson-datatype-threetenbp.git</developerConnection>
    <url>http://github.com/joschi/jackson-datatype-threetenbp</url>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <version.jackson.core>2.4.1</version.jackson.core>
    <version.jackson.databind>2.4.1.1</version.jackson.databind>
    <!-- Generate PackageVersion.java into this directory. -->
    <packageVersion.dir>com/fasterxml/jackson/datatype/threetenbp</packageVersion.dir>
    <packageVersion.package>${project.groupId}.threetenbp</packageVersion.package>
    <javac.src.version>1.7</javac.src.version>
    <javac.target.version>1.7</javac.target.version>
    <!-- Configuration properties for the OSGi maven-bundle-plugin -->
    <osgi.import>com.fasterxml.jackson.core
,com.fasterxml.jackson.core.util
,com.fasterxml.jackson.databind
,com.fasterxml.jackson.databind.deser.std
,com.fasterxml.jackson.databind.jsontype
,com.fasterxml.jackson.databind.module
,com.fasterxml.jackson.databind.node
,com.fasterxml.jackson.databind.ser.std
    </osgi.import>
    <osgi.export>${project.groupId}.threetenbp.*;version=${project.version}</osgi.export>
    <threetenbp.version>0.9</threetenbp.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.threeten</groupId>
      <artifactId>threetenbp</artifactId>
      <version>${threetenbp.version}</version>
    </dependency>
    <!-- Extends Jackson mapper, 2.x -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${version.jackson.core}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${version.jackson.databind}</version>
    </dependency>

    <!--  Test Dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.9</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-java</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[1.7,)</version>
                  <message>[ERROR] The currently supported version of Java is 1.7 or higher</message>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.0,)</version>
                  <message>[ERROR] The currently supported version of Maven is 3.0 or higher</message>
                </requireMavenVersion>
                <requirePluginVersions>
                  <banLatest>true</banLatest>
                  <banRelease>true</banRelease>
                  <banSnapshots>true</banSnapshots>
                  <phases>clean,deploy,site</phases>
                  <message>[ERROR] Best Practice is to always define plugin versions!</message>
                </requirePluginVersions>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.4.0</version>
      </plugin>
      <plugin>
        <!-- Inherited from oss-base. Generate PackageVersion.java.-->
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <executions>
          <execution>
            <id>process-packageVersion</id>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <inherited>true</inherited>
        <configuration>
          <source>${javac.src.version}</source>
          <target>${javac.target.version}</target>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
          <optimize>true</optimize>
          <compilerArguments>
            <Xmaxerrs>10000</Xmaxerrs>
            <Xmaxwarns>10000</Xmaxwarns>
            <Xlint />
          </compilerArguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.7.1.201405082137</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>2.2.0</version>
      </plugin>
    </plugins>
  </build>
</project>
